Mission
-bring together all engineers not just software developers

Key features
-profiles
    1.60 second pitch about you(highly recommened for greater chance of connecting)
    2.status: creator or recruit
    3.if creator: current projects, preferences on collarborating = hybrid, in-person, online
    4.city
    5.online notifier


Core functionalities
-possible meet up spots halfway between(coffee shops, libraries, wework)

Signup:
email/password/dob
to request or join stream meeting must finish required profile fields(this also lets you switch to creator status)


MVP
-profile/account(change and add)(add last_online attribute to engineer model)
-dm system
-friends list
-search and filtering
-live chat system
-proposed meeting spot algorithm 
-meetings/simple calendar page
-rating system/strike system
-extensive testing on just functionality for now
-advertising plan
-something to buy(payment when request to meet is accepted?)
-once someone accepts a meeting invation you two become collaborators(messaging and video calling only become available once two people are collaborators)
-only show the elevator pitch and current projects(basically undentifiable information(censor name in elevator pitch using ai))(to encourage people to meet in person might not pay for meeting invite if they request that type of meeting)


FUTURE IDEAS
-if you sign up for a commited meeting you have to go or you get a strike(reliability score)
-repository
-replit
-kids version
-option to do leetcode probs together on site
-pitch competitions/meetups
-youtube coding interviews and skits on the platform to advertise

LINKS TO HELPFUL FORMUS AND TUTORIALS
creating custom user model = https://docs.djangoproject.com/en/5.1/topics/auth/customizing/#django.contrib.auth.models.AbstractBaseUser
authentication system = https://www.geeksforgeeks.org/user-authentication-system-using-django/
real time chat system = https://career.proxify.io/article/real-time-chat-with-Django
**real time chat systems that supports multiple rooms = https://medium.com/@abdullafajal/how-to-create-live-chat-project-in-django-using-django-channels-a87715a517d6 
**channels docs that was the sole contributor in make text chat work = https://channels.readthedocs.io/en/latest/tutorial/part_2.html 
https://learndjango.com/tutorials/django-custom-user-model#abstractuser-vs-abstractbaseuser
https://learndjango.com/tutorials/django-log-in-email-not-username
adding custom user model fields to admin page(also look at authentication admin in closed) - https://stackoverflow.com/questions/65046722/add-a-field-to-the-django-admin-for-a-custom-user-model
show a profiles information on another page - https://www.w3schools.com/django/django_add_link_details.php


THINGS TO FIX:
-need to add address and meeting prefernce information to user model

1st Payment Window
-user clicks on send meeting request
-right after they are prompted to customize their meeting request and before submiting are told that five dollars will be charged when and if the other user accepts the invitation
-after the meeting request is sent, all hidden information about that user is revealed and chat capabilites are unlocked
-the user who accepts the invite can be given a strike if they do not show up to the meeting without canceling 24 hours prior, however the sender cannot due to them spending money
-all users videos need to be scanned by ai to remove names until after someone pays to have a meeting with them
(THIS METHOD IS LIKELY GOING TO BE TOO EXPLOITABLE BUT THERE SHOULD BE SOME SORT OF INCENTIVE TO PAY BY THE PERSON TO ENSURE RELIABILITY ON BOTH ENDS)

maybe add case study tab like successstory.com